package com.in.fsa.VO;

import com.in.fsa.EO.FacilitySynBankEOImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 14 22:47:43 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FacilitySynBankVORowImpl extends ViewRowImpl {
  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  public enum AttributesEnum {
    Id {
      public Object get(FacilitySynBankVORowImpl obj) {
        return obj.getId();
      }

      public void put(FacilitySynBankVORowImpl obj, Object value) {
        obj.setId((Number)value);
      }
    }
    ,
    TxnId {
      public Object get(FacilitySynBankVORowImpl obj) {
        return obj.getTxnId();
      }

      public void put(FacilitySynBankVORowImpl obj, Object value) {
        obj.setTxnId((Number)value);
      }
    }
    ,
    BankName {
      public Object get(FacilitySynBankVORowImpl obj) {
        return obj.getBankName();
      }

      public void put(FacilitySynBankVORowImpl obj, Object value) {
        obj.setBankName((String)value);
      }
    }
    ,
    Percentage {
      public Object get(FacilitySynBankVORowImpl obj) {
        return obj.getPercentage();
      }

      public void put(FacilitySynBankVORowImpl obj, Object value) {
        obj.setPercentage((Number)value);
      }
    }
    ,
    Amount {
      public Object get(FacilitySynBankVORowImpl obj) {
        return obj.getAmount();
      }

      public void put(FacilitySynBankVORowImpl obj, Object value) {
        obj.setAmount((Number)value);
      }
    }
    ,
    FacilityType {
      public Object get(FacilitySynBankVORowImpl obj) {
        return obj.getFacilityType();
      }

      public void put(FacilitySynBankVORowImpl obj, Object value) {
        obj.setFacilityType((String)value);
      }
    }
    ,
    CreatedBy {
      public Object get(FacilitySynBankVORowImpl obj) {
        return obj.getCreatedBy();
      }

      public void put(FacilitySynBankVORowImpl obj, Object value) {
        obj.setCreatedBy((String)value);
      }
    }
    ,
    CreationDate {
      public Object get(FacilitySynBankVORowImpl obj) {
        return obj.getCreationDate();
      }

      public void put(FacilitySynBankVORowImpl obj, Object value) {
        obj.setCreationDate((Date)value);
      }
    }
    ,
    LastUpdatedBy {
      public Object get(FacilitySynBankVORowImpl obj) {
        return obj.getLastUpdatedBy();
      }

      public void put(FacilitySynBankVORowImpl obj, Object value) {
        obj.setLastUpdatedBy((String)value);
      }
    }
    ,
    LastUpdatedDate {
      public Object get(FacilitySynBankVORowImpl obj) {
        return obj.getLastUpdatedDate();
      }

      public void put(FacilitySynBankVORowImpl obj, Object value) {
        obj.setLastUpdatedDate((Date)value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

    public abstract Object get(FacilitySynBankVORowImpl object);

    public abstract void put(FacilitySynBankVORowImpl object, Object value);

    public int index() {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static final int firstIndex() {
      return firstIndex;
    }

    public static int count() {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static final AttributesEnum[] staticValues() {
      if (vals == null) {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }
  public static final int ID = AttributesEnum.Id.index();
  public static final int TXNID = AttributesEnum.TxnId.index();
  public static final int BANKNAME = AttributesEnum.BankName.index();
  public static final int PERCENTAGE = AttributesEnum.Percentage.index();
  public static final int AMOUNT = AttributesEnum.Amount.index();
  public static final int FACILITYTYPE = AttributesEnum.FacilityType.index();
  public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
  public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
  public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
  public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();

  /**
   * This is the default constructor (do not remove).
   */
  public FacilitySynBankVORowImpl() {
  }

  /**
   * Gets FacilitySynBankEO entity object.
   * @return the FacilitySynBankEO
   */
  public FacilitySynBankEOImpl getFacilitySynBankEO() {
    return (FacilitySynBankEOImpl)getEntity(0);
  }

  /**
   * Gets the attribute value for ID using the alias name Id.
   * @return the ID
   */
  public Number getId() {
    return (Number) getAttributeInternal(ID);
  }

  /**
   * Sets <code>value</code> as attribute value for ID using the alias name Id.
   * @param value value to set the ID
   */
  public void setId(Number value) {
    setAttributeInternal(ID, value);
  }

  /**
   * Gets the attribute value for TXN_ID using the alias name TxnId.
   * @return the TXN_ID
   */
  public Number getTxnId() {
    return (Number) getAttributeInternal(TXNID);
  }

  /**
   * Sets <code>value</code> as attribute value for TXN_ID using the alias name TxnId.
   * @param value value to set the TXN_ID
   */
  public void setTxnId(Number value) {
    setAttributeInternal(TXNID, value);
  }

  /**
   * Gets the attribute value for BANK_NAME using the alias name BankName.
   * @return the BANK_NAME
   */
  public String getBankName() {
    return (String) getAttributeInternal(BANKNAME);
  }

  /**
   * Sets <code>value</code> as attribute value for BANK_NAME using the alias name BankName.
   * @param value value to set the BANK_NAME
   */
  public void setBankName(String value) {
    setAttributeInternal(BANKNAME, value);
  }

  /**
   * Gets the attribute value for PERCENTAGE using the alias name Percentage.
   * @return the PERCENTAGE
   */
  public Number getPercentage() {
    return (Number) getAttributeInternal(PERCENTAGE);
  }

  /**
   * Sets <code>value</code> as attribute value for PERCENTAGE using the alias name Percentage.
   * @param value value to set the PERCENTAGE
   */
  public void setPercentage(Number value) {
    setAttributeInternal(PERCENTAGE, value);
  }

  /**
   * Gets the attribute value for AMOUNT using the alias name Amount.
   * @return the AMOUNT
   */
  public Number getAmount() {
    return (Number) getAttributeInternal(AMOUNT);
  }

  /**
   * Sets <code>value</code> as attribute value for AMOUNT using the alias name Amount.
   * @param value value to set the AMOUNT
   */
  public void setAmount(Number value) {
    setAttributeInternal(AMOUNT, value);
  }

  /**
   * Gets the attribute value for FACILITY_TYPE using the alias name FacilityType.
   * @return the FACILITY_TYPE
   */
  public String getFacilityType() {
    return (String) getAttributeInternal(FACILITYTYPE);
  }

  /**
   * Sets <code>value</code> as attribute value for FACILITY_TYPE using the alias name FacilityType.
   * @param value value to set the FACILITY_TYPE
   */
  public void setFacilityType(String value) {
    setAttributeInternal(FACILITYTYPE, value);
  }

  /**
   * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
   * @return the CREATED_BY
   */
  public String getCreatedBy() {
    return (String) getAttributeInternal(CREATEDBY);
  }

  /**
   * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
   * @param value value to set the CREATED_BY
   */
  public void setCreatedBy(String value) {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
   * @return the CREATION_DATE
   */
  public Date getCreationDate() {
    return (Date) getAttributeInternal(CREATIONDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
   * @param value value to set the CREATION_DATE
   */
  public void setCreationDate(Date value) {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
   * @return the LAST_UPDATED_BY
   */
  public String getLastUpdatedBy() {
    return (String) getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
   * @param value value to set the LAST_UPDATED_BY
   */
  public void setLastUpdatedBy(String value) {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
   * @return the LAST_UPDATED_DATE
   */
  public Date getLastUpdatedDate() {
    return (Date) getAttributeInternal(LASTUPDATEDDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
   * @param value value to set the LAST_UPDATED_DATE
   */
  public void setLastUpdatedDate(Date value) {
    setAttributeInternal(LASTUPDATEDDATE, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index,
                                         AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value,
                                       AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
}
