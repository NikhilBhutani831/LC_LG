package com.in.fsa.VO;

import com.in.fsa.EO.FacilityAmtSumEOImpl;

import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 14 22:50:05 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FacilityAmtSumVORowImpl extends ViewRowImpl {
  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  public enum AttributesEnum {
    CompId {
      public Object get(FacilityAmtSumVORowImpl obj) {
        return obj.getCompId();
      }

      public void put(FacilityAmtSumVORowImpl obj, Object value) {
        obj.setCompId((Number)value);
      }
    }
    ,
    Component1 {
      public Object get(FacilityAmtSumVORowImpl obj) {
        return obj.getComponent1();
      }

      public void put(FacilityAmtSumVORowImpl obj, Object value) {
        obj.setComponent1((String)value);
      }
    }
    ,
    UsedAmount {
      public Object get(FacilityAmtSumVORowImpl obj) {
        return obj.getUsedAmount();
      }

      public void put(FacilityAmtSumVORowImpl obj, Object value) {
        obj.setUsedAmount((Number)value);
      }
    }
    ,
    RecoveredAmount {
      public Object get(FacilityAmtSumVORowImpl obj) {
        return obj.getRecoveredAmount();
      }

      public void put(FacilityAmtSumVORowImpl obj, Object value) {
        obj.setRecoveredAmount((Number)value);
      }
    }
    ,
    RemainingAmount {
      public Object get(FacilityAmtSumVORowImpl obj) {
        return obj.getRemainingAmount();
      }

      public void put(FacilityAmtSumVORowImpl obj, Object value) {
        obj.setRemainingAmount((Number)value);
      }
    }
    ,
    CreatedBy {
      public Object get(FacilityAmtSumVORowImpl obj) {
        return obj.getCreatedBy();
      }

      public void put(FacilityAmtSumVORowImpl obj, Object value) {
        obj.setCreatedBy((String)value);
      }
    }
    ,
    CreationDate {
      public Object get(FacilityAmtSumVORowImpl obj) {
        return obj.getCreationDate();
      }

      public void put(FacilityAmtSumVORowImpl obj, Object value) {
        obj.setCreationDate((Date)value);
      }
    }
    ,
    LastUpdatedBy {
      public Object get(FacilityAmtSumVORowImpl obj) {
        return obj.getLastUpdatedBy();
      }

      public void put(FacilityAmtSumVORowImpl obj, Object value) {
        obj.setLastUpdatedBy((String)value);
      }
    }
    ,
    LastUpdatedDate {
      public Object get(FacilityAmtSumVORowImpl obj) {
        return obj.getLastUpdatedDate();
      }

      public void put(FacilityAmtSumVORowImpl obj, Object value) {
        obj.setLastUpdatedDate((Date)value);
      }
    }
    ,
    TxnId {
      public Object get(FacilityAmtSumVORowImpl obj) {
        return obj.getTxnId();
      }

      public void put(FacilityAmtSumVORowImpl obj, Object value) {
        obj.setTxnId((Number)value);
      }
    }
    ,
    IsNew {
      public Object get(FacilityAmtSumVORowImpl obj) {
        return obj.getIsNew();
      }

      public void put(FacilityAmtSumVORowImpl obj, Object value) {
        obj.setIsNew((String)value);
      }
    }
    ,
    FacilityAmtSumDetVO {
      public Object get(FacilityAmtSumVORowImpl obj) {
        return obj.getFacilityAmtSumDetVO();
      }

      public void put(FacilityAmtSumVORowImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

    public abstract Object get(FacilityAmtSumVORowImpl object);

    public abstract void put(FacilityAmtSumVORowImpl object, Object value);

    public int index() {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static final int firstIndex() {
      return firstIndex;
    }

    public static int count() {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static final AttributesEnum[] staticValues() {
      if (vals == null) {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }
  public static final int COMPID = AttributesEnum.CompId.index();
  public static final int COMPONENT1 = AttributesEnum.Component1.index();
  public static final int USEDAMOUNT = AttributesEnum.UsedAmount.index();
  public static final int RECOVEREDAMOUNT = AttributesEnum.RecoveredAmount.index();
  public static final int REMAININGAMOUNT = AttributesEnum.RemainingAmount.index();
  public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
  public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
  public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
  public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
  public static final int TXNID = AttributesEnum.TxnId.index();
  public static final int ISNEW = AttributesEnum.IsNew.index();
  public static final int FACILITYAMTSUMDETVO = AttributesEnum.FacilityAmtSumDetVO.index();

  /**
   * This is the default constructor (do not remove).
   */
  public FacilityAmtSumVORowImpl() {
  }

  /**
   * Gets FacilityAmtSumEO entity object.
   * @return the FacilityAmtSumEO
   */
  public FacilityAmtSumEOImpl getFacilityAmtSumEO() {
    return (FacilityAmtSumEOImpl)getEntity(0);
  }

  /**
   * Gets the attribute value for COMP_ID using the alias name CompId.
   * @return the COMP_ID
   */
  public Number getCompId() {
    return (Number) getAttributeInternal(COMPID);
  }

  /**
   * Sets <code>value</code> as attribute value for COMP_ID using the alias name CompId.
   * @param value value to set the COMP_ID
   */
  public void setCompId(Number value) {
    setAttributeInternal(COMPID, value);
  }

  /**
   * Gets the attribute value for COMPONENT using the alias name Component1.
   * @return the COMPONENT
   */
  public String getComponent1() {
    return (String) getAttributeInternal(COMPONENT1);
  }

  /**
   * Sets <code>value</code> as attribute value for COMPONENT using the alias name Component1.
   * @param value value to set the COMPONENT
   */
  public void setComponent1(String value) {
    setAttributeInternal(COMPONENT1, value);
  }

  /**
   * Gets the attribute value for USED_AMOUNT using the alias name UsedAmount.
   * @return the USED_AMOUNT
   */
  public Number getUsedAmount() {
    return (Number) getAttributeInternal(USEDAMOUNT);
  }

  /**
   * Sets <code>value</code> as attribute value for USED_AMOUNT using the alias name UsedAmount.
   * @param value value to set the USED_AMOUNT
   */
  public void setUsedAmount(Number value) {
    setAttributeInternal(USEDAMOUNT, value);
  }

  /**
   * Gets the attribute value for RECOVERED_AMOUNT using the alias name RecoveredAmount.
   * @return the RECOVERED_AMOUNT
   */
  public Number getRecoveredAmount() {
    return (Number) getAttributeInternal(RECOVEREDAMOUNT);
  }

  /**
   * Sets <code>value</code> as attribute value for RECOVERED_AMOUNT using the alias name RecoveredAmount.
   * @param value value to set the RECOVERED_AMOUNT
   */
  public void setRecoveredAmount(Number value) {
    setAttributeInternal(RECOVEREDAMOUNT, value);
  }

  /**
   * Gets the attribute value for REMAINING_AMOUNT using the alias name RemainingAmount.
   * @return the REMAINING_AMOUNT
   */
  public Number getRemainingAmount() {
    return (Number) getAttributeInternal(REMAININGAMOUNT);
  }

  /**
   * Sets <code>value</code> as attribute value for REMAINING_AMOUNT using the alias name RemainingAmount.
   * @param value value to set the REMAINING_AMOUNT
   */
  public void setRemainingAmount(Number value) {
    setAttributeInternal(REMAININGAMOUNT, value);
  }

  /**
   * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
   * @return the CREATED_BY
   */
  public String getCreatedBy() {
    return (String) getAttributeInternal(CREATEDBY);
  }

  /**
   * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
   * @param value value to set the CREATED_BY
   */
  public void setCreatedBy(String value) {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
   * @return the CREATION_DATE
   */
  public Date getCreationDate() {
    return (Date) getAttributeInternal(CREATIONDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
   * @param value value to set the CREATION_DATE
   */
  public void setCreationDate(Date value) {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
   * @return the LAST_UPDATED_BY
   */
  public String getLastUpdatedBy() {
    return (String) getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
   * @param value value to set the LAST_UPDATED_BY
   */
  public void setLastUpdatedBy(String value) {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
   * @return the LAST_UPDATED_DATE
   */
  public Date getLastUpdatedDate() {
    return (Date) getAttributeInternal(LASTUPDATEDDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
   * @param value value to set the LAST_UPDATED_DATE
   */
  public void setLastUpdatedDate(Date value) {
    setAttributeInternal(LASTUPDATEDDATE, value);
  }

  /**
   * Gets the attribute value for TXN_ID using the alias name TxnId.
   * @return the TXN_ID
   */
  public Number getTxnId() {
    return (Number) getAttributeInternal(TXNID);
  }

  /**
   * Sets <code>value</code> as attribute value for TXN_ID using the alias name TxnId.
   * @param value value to set the TXN_ID
   */
  public void setTxnId(Number value) {
    setAttributeInternal(TXNID, value);
  }

  /**
   * Gets the attribute value for IS_NEW using the alias name IsNew.
   * @return the IS_NEW
   */
  public String getIsNew() {
    return (String) getAttributeInternal(ISNEW);
  }

  /**
   * Sets <code>value</code> as attribute value for IS_NEW using the alias name IsNew.
   * @param value value to set the IS_NEW
   */
  public void setIsNew(String value) {
    setAttributeInternal(ISNEW, value);
  }

  /**
   * Gets the associated <code>RowIterator</code> using master-detail link FacilityAmtSumDetVO.
   */
  public RowIterator getFacilityAmtSumDetVO() {
    return (RowIterator)getAttributeInternal(FACILITYAMTSUMDETVO);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index,
                                         AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value,
                                       AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
}
