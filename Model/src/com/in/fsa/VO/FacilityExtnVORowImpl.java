package com.in.fsa.VO;

import java.math.BigDecimal;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 16 13:38:54 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FacilityExtnVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
    Id {
      public Object get(FacilityExtnVORowImpl obj) {
        return obj.getId();
      }

      public void put(FacilityExtnVORowImpl obj, Object value) {
        obj.setId((Number)value);
      }
    }
    ,
    TxnId {
      public Object get(FacilityExtnVORowImpl obj) {
        return obj.getTxnId();
      }

      public void put(FacilityExtnVORowImpl obj, Object value) {
        obj.setTxnId((Number)value);
      }
    }
    ,
    ExpiryDate {
      public Object get(FacilityExtnVORowImpl obj) {
        return obj.getExpiryDate();
      }

      public void put(FacilityExtnVORowImpl obj, Object value) {
        obj.setExpiryDate((Date)value);
      }
    }
    ,
    Amount {
      public Object get(FacilityExtnVORowImpl obj) {
        return obj.getAmount();
      }

      public void put(FacilityExtnVORowImpl obj, Object value) {
        obj.setAmount((BigDecimal)value);
      }
    }
    ,
    FacilityDate {
      public Object get(FacilityExtnVORowImpl obj) {
        return obj.getFacilityDate();
      }

      public void put(FacilityExtnVORowImpl obj, Object value) {
        obj.setFacilityDate((Date)value);
      }
    }
    ,
    FacilityType {
      public Object get(FacilityExtnVORowImpl obj) {
        return obj.getFacilityType();
      }

      public void put(FacilityExtnVORowImpl obj, Object value) {
        obj.setFacilityType((String)value);
      }
    }
    ;
    static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

        public abstract Object get(FacilityExtnVORowImpl object);

        public abstract void put(FacilityExtnVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

  public static final int ID = AttributesEnum.Id.index();
  public static final int TXNID = AttributesEnum.TxnId.index();
  public static final int EXPIRYDATE = AttributesEnum.ExpiryDate.index();
  public static final int AMOUNT = AttributesEnum.Amount.index();
  public static final int FACILITYDATE = AttributesEnum.FacilityDate.index();
  public static final int FACILITYTYPE = AttributesEnum.FacilityType.index();

  /**
   * This is the default constructor (do not remove).
   */
    public FacilityExtnVORowImpl() {
    }

    /**
     * Gets FacilityExtnEO entity object.
     * @return the FacilityExtnEO
     */
    public EntityImpl getFacilityExtnEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for TXN_ID using the alias name TxnId.
     * @return the TXN_ID
     */
    public Number getTxnId() {
        return (Number) getAttributeInternal(TXNID);
    }

    /**
     * Sets <code>value</code> as attribute value for TXN_ID using the alias name TxnId.
     * @param value value to set the TXN_ID
     */
    public void setTxnId(Number value) {
        setAttributeInternal(TXNID, value);
    }


  /**
   * Gets the attribute value for EXPIRY_DATE using the alias name ExpiryDate.
   * @return the EXPIRY_DATE
   */
    public Date getExpiryDate() {
        return (Date) getAttributeInternal(EXPIRYDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXPIRY_DATE using the alias name ExpiryDate.
     * @param value value to set the EXPIRY_DATE
     */
    public void setExpiryDate(Date value) {
        setAttributeInternal(EXPIRYDATE, value);
    }


  /**
   * Gets the attribute value for AMOUNT using the alias name Amount.
   * @return the AMOUNT
   */
  public BigDecimal getAmount() {
    return (BigDecimal) getAttributeInternal(AMOUNT);
  }

  /**
   * Sets <code>value</code> as attribute value for AMOUNT using the alias name Amount.
   * @param value value to set the AMOUNT
   */
  public void setAmount(BigDecimal value) {
    setAttributeInternal(AMOUNT, value);
  }

  /**
   * Gets the attribute value for FACILITY_DATE using the alias name FacilityDate.
   * @return the FACILITY_DATE
   */
  public Date getFacilityDate() {
    return (Date) getAttributeInternal(FACILITYDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for FACILITY_DATE using the alias name FacilityDate.
   * @param value value to set the FACILITY_DATE
   */
  public void setFacilityDate(Date value) {
    setAttributeInternal(FACILITYDATE, value);
  }

  /**
   * Gets the attribute value for FACILITY_TYPE using the alias name FacilityType.
   * @return the FACILITY_TYPE
   */
  public String getFacilityType() {
    return (String) getAttributeInternal(FACILITYTYPE);
  }

  /**
   * Sets <code>value</code> as attribute value for FACILITY_TYPE using the alias name FacilityType.
   * @param value value to set the FACILITY_TYPE
   */
  public void setFacilityType(String value) {
    setAttributeInternal(FACILITYTYPE, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
}
