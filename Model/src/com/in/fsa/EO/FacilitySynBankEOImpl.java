package com.in.fsa.EO;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 07 17:30:05 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FacilitySynBankEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(FacilitySynBankEOImpl obj) {
                return obj.getId();
            }

            public void put(FacilitySynBankEOImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        TxnId {
            public Object get(FacilitySynBankEOImpl obj) {
                return obj.getTxnId();
            }

            public void put(FacilitySynBankEOImpl obj, Object value) {
                obj.setTxnId((Number)value);
            }
        }
        ,
        BankName {
            public Object get(FacilitySynBankEOImpl obj) {
                return obj.getBankName();
            }

            public void put(FacilitySynBankEOImpl obj, Object value) {
                obj.setBankName((String)value);
            }
        }
        ,
        Percentage {
            public Object get(FacilitySynBankEOImpl obj) {
                return obj.getPercentage();
            }

            public void put(FacilitySynBankEOImpl obj, Object value) {
                obj.setPercentage((Number)value);
            }
        }
        ,
        Amount {
            public Object get(FacilitySynBankEOImpl obj) {
                return obj.getAmount();
            }

            public void put(FacilitySynBankEOImpl obj, Object value) {
                obj.setAmount((Number)value);
            }
        }
        ,
        FacilityType {
            public Object get(FacilitySynBankEOImpl obj) {
                return obj.getFacilityType();
            }

            public void put(FacilitySynBankEOImpl obj, Object value) {
                obj.setFacilityType((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(FacilitySynBankEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(FacilitySynBankEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(FacilitySynBankEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(FacilitySynBankEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(FacilitySynBankEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(FacilitySynBankEOImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(FacilitySynBankEOImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(FacilitySynBankEOImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        FacilityTxnEO {
            public Object get(FacilitySynBankEOImpl obj) {
                return obj.getFacilityTxnEO();
            }

            public void put(FacilitySynBankEOImpl obj, Object value) {
                obj.setFacilityTxnEO((FacilityTxnEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(FacilitySynBankEOImpl object);

        public abstract void put(FacilitySynBankEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int TXNID = AttributesEnum.TxnId.index();
    public static final int BANKNAME = AttributesEnum.BankName.index();
    public static final int PERCENTAGE = AttributesEnum.Percentage.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int FACILITYTYPE = AttributesEnum.FacilityType.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int FACILITYTXNEO = AttributesEnum.FacilityTxnEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FacilitySynBankEOImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for TxnId, using the alias name TxnId.
     * @return the TxnId
     */
    public Number getTxnId() {
        return (Number)getAttributeInternal(TXNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TxnId.
     * @param value value to set the TxnId
     */
    public void setTxnId(Number value) {
        setAttributeInternal(TXNID, value);
    }

    /**
     * Gets the attribute value for BankName, using the alias name BankName.
     * @return the BankName
     */
    public String getBankName() {
        return (String)getAttributeInternal(BANKNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for BankName.
     * @param value value to set the BankName
     */
    public void setBankName(String value) {
        setAttributeInternal(BANKNAME, value);
    }

    /**
     * Gets the attribute value for Percentage, using the alias name Percentage.
     * @return the Percentage
     */
    public Number getPercentage() {
        return (Number)getAttributeInternal(PERCENTAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Percentage.
     * @param value value to set the Percentage
     */
    public void setPercentage(Number value) {
        setAttributeInternal(PERCENTAGE, value);
    }

    /**
     * Gets the attribute value for Amount, using the alias name Amount.
     * @return the Amount
     */
    public Number getAmount() {
        return (Number)getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Amount.
     * @param value value to set the Amount
     */
    public void setAmount(Number value) {
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the attribute value for FacilityType, using the alias name FacilityType.
     * @return the FacilityType
     */
    public String getFacilityType() {
        return (String)getAttributeInternal(FACILITYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FacilityType.
     * @param value value to set the FacilityType
     */
    public void setFacilityType(String value) {
        setAttributeInternal(FACILITYTYPE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity FacilityTxnEOImpl.
     */
    public FacilityTxnEOImpl getFacilityTxnEO() {
        return (FacilityTxnEOImpl)getAttributeInternal(FACILITYTXNEO);
    }

    /**
     * Sets <code>value</code> as the associated entity FacilityTxnEOImpl.
     */
    public void setFacilityTxnEO(FacilityTxnEOImpl value) {
        setAttributeInternal(FACILITYTXNEO, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.in.fsa.EO.FacilitySynBankEO");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
