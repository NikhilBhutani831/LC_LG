package com.in.fsa.EO;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 07 17:30:31 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FacilityAmtSumEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
    CompId {
      public Object get(FacilityAmtSumEOImpl obj) {
        return obj.getCompId();
      }

      public void put(FacilityAmtSumEOImpl obj, Object value) {
        obj.setCompId((Number)value);
      }
    }
    ,
    Component1 {
      public Object get(FacilityAmtSumEOImpl obj) {
        return obj.getComponent1();
      }

      public void put(FacilityAmtSumEOImpl obj, Object value) {
        obj.setComponent1((String)value);
      }
    }
    ,
    UsedAmount {
      public Object get(FacilityAmtSumEOImpl obj) {
        return obj.getUsedAmount();
      }

      public void put(FacilityAmtSumEOImpl obj, Object value) {
        obj.setUsedAmount((Number)value);
      }
    }
    ,
    RecoveredAmount {
      public Object get(FacilityAmtSumEOImpl obj) {
        return obj.getRecoveredAmount();
      }

      public void put(FacilityAmtSumEOImpl obj, Object value) {
        obj.setRecoveredAmount((Number)value);
      }
    }
    ,
    RemainingAmount {
      public Object get(FacilityAmtSumEOImpl obj) {
        return obj.getRemainingAmount();
      }

      public void put(FacilityAmtSumEOImpl obj, Object value) {
        obj.setRemainingAmount((Number)value);
      }
    }
    ,
    CreatedBy {
      public Object get(FacilityAmtSumEOImpl obj) {
        return obj.getCreatedBy();
      }

      public void put(FacilityAmtSumEOImpl obj, Object value) {
        obj.setCreatedBy((String)value);
      }
    }
    ,
    CreationDate {
      public Object get(FacilityAmtSumEOImpl obj) {
        return obj.getCreationDate();
      }

      public void put(FacilityAmtSumEOImpl obj, Object value) {
        obj.setCreationDate((Date)value);
      }
    }
    ,
    LastUpdatedBy {
      public Object get(FacilityAmtSumEOImpl obj) {
        return obj.getLastUpdatedBy();
      }

      public void put(FacilityAmtSumEOImpl obj, Object value) {
        obj.setLastUpdatedBy((String)value);
      }
    }
    ,
    LastUpdatedDate {
      public Object get(FacilityAmtSumEOImpl obj) {
        return obj.getLastUpdatedDate();
      }

      public void put(FacilityAmtSumEOImpl obj, Object value) {
        obj.setLastUpdatedDate((Date)value);
      }
    }
    ,
    TxnId {
      public Object get(FacilityAmtSumEOImpl obj) {
        return obj.getTxnId();
      }

      public void put(FacilityAmtSumEOImpl obj, Object value) {
        obj.setTxnId((Number)value);
      }
    }
    ,
    IsNew {
      public Object get(FacilityAmtSumEOImpl obj) {
        return obj.getIsNew();
      }

      public void put(FacilityAmtSumEOImpl obj, Object value) {
        obj.setIsNew((String)value);
      }
    }
    ,
    FacilityAmtSumDetEO {
      public Object get(FacilityAmtSumEOImpl obj) {
        return obj.getFacilityAmtSumDetEO();
      }

      public void put(FacilityAmtSumEOImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

        public abstract Object get(FacilityAmtSumEOImpl object);

        public abstract void put(FacilityAmtSumEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


  public static final int COMPID = AttributesEnum.CompId.index();
  public static final int COMPONENT1 = AttributesEnum.Component1.index();
  public static final int USEDAMOUNT = AttributesEnum.UsedAmount.index();
  public static final int RECOVEREDAMOUNT = AttributesEnum.RecoveredAmount.index();
  public static final int REMAININGAMOUNT = AttributesEnum.RemainingAmount.index();
  public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
  public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
  public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
  public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
  public static final int TXNID = AttributesEnum.TxnId.index();
  public static final int ISNEW = AttributesEnum.IsNew.index();
  public static final int FACILITYAMTSUMDETEO = AttributesEnum.FacilityAmtSumDetEO.index();

  /**
   * This is the default constructor (do not remove).
   */
    public FacilityAmtSumEOImpl() {
    }


  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    return EntityDefImpl.findDefObject("com.in.fsa.EO.FacilityAmtSumEO");
  }

  /**
   * Gets the attribute value for CompId, using the alias name CompId.
   * @return the CompId
   */
    public Number getCompId() {
        return (Number)getAttributeInternal(COMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompId.
     * @param value value to set the CompId
     */
    public void setCompId(Number value) {
        setAttributeInternal(COMPID, value);
    }

    /**
     * Gets the attribute value for Component1, using the alias name Component1.
     * @return the Component1
     */
    public String getComponent1() {
        return (String)getAttributeInternal(COMPONENT1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Component1.
     * @param value value to set the Component1
     */
    public void setComponent1(String value) {
        setAttributeInternal(COMPONENT1, value);
    }

    /**
     * Gets the attribute value for UsedAmount, using the alias name UsedAmount.
     * @return the UsedAmount
     */
    public Number getUsedAmount() {
        return (Number)getAttributeInternal(USEDAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsedAmount.
     * @param value value to set the UsedAmount
     */
    public void setUsedAmount(Number value) {
        setAttributeInternal(USEDAMOUNT, value);
    }

    /**
     * Gets the attribute value for RecoveredAmount, using the alias name RecoveredAmount.
     * @return the RecoveredAmount
     */
    public Number getRecoveredAmount() {
        return (Number)getAttributeInternal(RECOVEREDAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecoveredAmount.
     * @param value value to set the RecoveredAmount
     */
    public void setRecoveredAmount(Number value) {
        setAttributeInternal(RECOVEREDAMOUNT, value);
    }

    /**
     * Gets the attribute value for RemainingAmount, using the alias name RemainingAmount.
     * @return the RemainingAmount
     */
    public Number getRemainingAmount() {
        return (Number)getAttributeInternal(REMAININGAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RemainingAmount.
     * @param value value to set the RemainingAmount
     */
    public void setRemainingAmount(Number value) {
        setAttributeInternal(REMAININGAMOUNT, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

  /**
   * Gets the attribute value for TxnId, using the alias name TxnId.
   * @return the TxnId
   */
  public Number getTxnId() {
    return (Number)getAttributeInternal(TXNID);
  }

  /**
   * Sets <code>value</code> as the attribute value for TxnId.
   * @param value value to set the TxnId
   */
  public void setTxnId(Number value) {
    setAttributeInternal(TXNID, value);
  }

  /**
   * Gets the attribute value for IsNew, using the alias name IsNew.
   * @return the IsNew
   */
  public String getIsNew() {
    return (String)getAttributeInternal(ISNEW);
  }

  /**
   * Sets <code>value</code> as the attribute value for IsNew.
   * @param value value to set the IsNew
   */
  public void setIsNew(String value) {
    setAttributeInternal(ISNEW, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFacilityAmtSumDetEO() {
        return (RowIterator)getAttributeInternal(FACILITYAMTSUMDETEO);
    }


  /**
   * @param compId key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(Number compId) {
    return new Key(new Object[]{compId});
  }

  /**
   * Add locking logic here.
   */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
