package com.in.fsa.EO;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 07 17:28:21 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FacilityHdrEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
    DocumentNumber {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getDocumentNumber();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setDocumentNumber((Number)value);
      }
    }
    ,
    FacilityNumber {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getFacilityNumber();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setFacilityNumber((String)value);
      }
    }
    ,
    TotalAmount {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getTotalAmount();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setTotalAmount((Number)value);
      }
    }
    ,
    Description {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getDescription();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setDescription((String)value);
      }
    }
    ,
    FacilityDate {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getFacilityDate();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setFacilityDate((Date)value);
      }
    }
    ,
    ExpiryDate {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getExpiryDate();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setExpiryDate((Date)value);
      }
    }
    ,
    ExtendedExpiryDate {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getExtendedExpiryDate();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setExtendedExpiryDate((Date)value);
      }
    }
    ,
    NumberOfExtends {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getNumberOfExtends();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setNumberOfExtends((Number)value);
      }
    }
    ,
    LegalEntity {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getLegalEntity();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setLegalEntity((String)value);
      }
    }
    ,
    BusinessUnit {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getBusinessUnit();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setBusinessUnit((String)value);
      }
    }
    ,
    CreatedBy {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getCreatedBy();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setCreatedBy((String)value);
      }
    }
    ,
    CreationDate {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getCreationDate();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setCreationDate((Date)value);
      }
    }
    ,
    LastUpdatedBy {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getLastUpdatedBy();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setLastUpdatedBy((String)value);
      }
    }
    ,
    LastUpdatedDate {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getLastUpdatedDate();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setLastUpdatedDate((Date)value);
      }
    }
    ,
    IsNew {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getIsNew();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setIsNew((String)value);
      }
    }
    ,
    IsComplete {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getIsComplete();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setIsComplete((String)value);
      }
    }
    ,
    FacilityTxnEO {
      public Object get(FacilityHdrEOImpl obj) {
        return obj.getFacilityTxnEO();
      }

      public void put(FacilityHdrEOImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

        public abstract Object get(FacilityHdrEOImpl object);

        public abstract void put(FacilityHdrEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


  public static final int DOCUMENTNUMBER = AttributesEnum.DocumentNumber.index();
  public static final int FACILITYNUMBER = AttributesEnum.FacilityNumber.index();
  public static final int TOTALAMOUNT = AttributesEnum.TotalAmount.index();
  public static final int DESCRIPTION = AttributesEnum.Description.index();
  public static final int FACILITYDATE = AttributesEnum.FacilityDate.index();
  public static final int EXPIRYDATE = AttributesEnum.ExpiryDate.index();
  public static final int EXTENDEDEXPIRYDATE = AttributesEnum.ExtendedExpiryDate.index();
  public static final int NUMBEROFEXTENDS = AttributesEnum.NumberOfExtends.index();
  public static final int LEGALENTITY = AttributesEnum.LegalEntity.index();
  public static final int BUSINESSUNIT = AttributesEnum.BusinessUnit.index();
  public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
  public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
  public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
  public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
  public static final int ISNEW = AttributesEnum.IsNew.index();
  public static final int ISCOMPLETE = AttributesEnum.IsComplete.index();
  public static final int FACILITYTXNEO = AttributesEnum.FacilityTxnEO.index();

  /**
   * This is the default constructor (do not remove).
   */
    public FacilityHdrEOImpl() {
    }


  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    return EntityDefImpl.findDefObject("com.in.fsa.EO.FacilityHdrEO");
  }

  /**
   * Gets the attribute value for DocumentNumber, using the alias name DocumentNumber.
   * @return the DocumentNumber
   */
    public Number getDocumentNumber() {
        return (Number)getAttributeInternal(DOCUMENTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocumentNumber.
     * @param value value to set the DocumentNumber
     */
    public void setDocumentNumber(Number value) {
        setAttributeInternal(DOCUMENTNUMBER, value);
    }

    /**
     * Gets the attribute value for FacilityNumber, using the alias name FacilityNumber.
     * @return the FacilityNumber
     */
    public String getFacilityNumber() {
        return (String)getAttributeInternal(FACILITYNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for FacilityNumber.
     * @param value value to set the FacilityNumber
     */
    public void setFacilityNumber(String value) {
        setAttributeInternal(FACILITYNUMBER, value);
    }

    /**
     * Gets the attribute value for TotalAmount, using the alias name TotalAmount.
     * @return the TotalAmount
     */
    public Number getTotalAmount() {
        return (Number)getAttributeInternal(TOTALAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalAmount.
     * @param value value to set the TotalAmount
     */
    public void setTotalAmount(Number value) {
        setAttributeInternal(TOTALAMOUNT, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for FacilityDate, using the alias name FacilityDate.
     * @return the FacilityDate
     */
    public Date getFacilityDate() {
        return (Date)getAttributeInternal(FACILITYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FacilityDate.
     * @param value value to set the FacilityDate
     */
    public void setFacilityDate(Date value) {
        setAttributeInternal(FACILITYDATE, value);
    }

    /**
     * Gets the attribute value for ExpiryDate, using the alias name ExpiryDate.
     * @return the ExpiryDate
     */
    public Date getExpiryDate() {
        return (Date)getAttributeInternal(EXPIRYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpiryDate.
     * @param value value to set the ExpiryDate
     */
    public void setExpiryDate(Date value) {
        setAttributeInternal(EXPIRYDATE, value);
    }

    /**
     * Gets the attribute value for ExtendedExpiryDate, using the alias name ExtendedExpiryDate.
     * @return the ExtendedExpiryDate
     */
    public Date getExtendedExpiryDate() {
        return (Date)getAttributeInternal(EXTENDEDEXPIRYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtendedExpiryDate.
     * @param value value to set the ExtendedExpiryDate
     */
    public void setExtendedExpiryDate(Date value) {
        setAttributeInternal(EXTENDEDEXPIRYDATE, value);
    }

    /**
     * Gets the attribute value for NumberOfExtends, using the alias name NumberOfExtends.
     * @return the NumberOfExtends
     */
    public Number getNumberOfExtends() {
        return (Number)getAttributeInternal(NUMBEROFEXTENDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumberOfExtends.
     * @param value value to set the NumberOfExtends
     */
    public void setNumberOfExtends(Number value) {
        setAttributeInternal(NUMBEROFEXTENDS, value);
    }

    /**
     * Gets the attribute value for LegalEntity, using the alias name LegalEntity.
     * @return the LegalEntity
     */
    public String getLegalEntity() {
        return (String)getAttributeInternal(LEGALENTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LegalEntity.
     * @param value value to set the LegalEntity
     */
    public void setLegalEntity(String value) {
        setAttributeInternal(LEGALENTITY, value);
    }

    /**
     * Gets the attribute value for BusinessUnit, using the alias name BusinessUnit.
     * @return the BusinessUnit
     */
    public String getBusinessUnit() {
        return (String)getAttributeInternal(BUSINESSUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for BusinessUnit.
     * @param value value to set the BusinessUnit
     */
    public void setBusinessUnit(String value) {
        setAttributeInternal(BUSINESSUNIT, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

  /**
   * Gets the attribute value for IsNew, using the alias name IsNew.
   * @return the IsNew
   */
  public String getIsNew() {
    return (String)getAttributeInternal(ISNEW);
  }

  /**
   * Sets <code>value</code> as the attribute value for IsNew.
   * @param value value to set the IsNew
   */
  public void setIsNew(String value) {
    setAttributeInternal(ISNEW, value);
  }

  /**
   * Gets the attribute value for IsComplete, using the alias name IsComplete.
   * @return the IsComplete
   */
  public String getIsComplete() {
    return (String)getAttributeInternal(ISCOMPLETE);
  }

  /**
   * Sets <code>value</code> as the attribute value for IsComplete.
   * @param value value to set the IsComplete
   */
  public void setIsComplete(String value) {
    setAttributeInternal(ISCOMPLETE, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFacilityTxnEO() {
        return (RowIterator)getAttributeInternal(FACILITYTXNEO);
    }


  /**
   * @param documentNumber key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(Number documentNumber) {
    return new Key(new Object[]{documentNumber});
  }

  /**
   * Add locking logic here.
   */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
