package com.in.fsa.EO;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 07 17:29:23 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FacilityTxnEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TxnId {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getTxnId();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setTxnId((Number)value);
            }
        }
        ,
        DocumentNumber {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getDocumentNumber();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setDocumentNumber((Number)value);
            }
        }
        ,
        FacilityNumber {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getFacilityNumber();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setFacilityNumber((String)value);
            }
        }
        ,
        TotalAmount {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getTotalAmount();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setTotalAmount((Number)value);
            }
        }
        ,
        Description {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getDescription();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        FacilityDate {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getFacilityDate();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setFacilityDate((Date)value);
            }
        }
        ,
        ExpiryDate {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getExpiryDate();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setExpiryDate((Date)value);
            }
        }
        ,
        ExtendedExpiryDate {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getExtendedExpiryDate();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setExtendedExpiryDate((Date)value);
            }
        }
        ,
        NumberOfExtends {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getNumberOfExtends();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setNumberOfExtends((Number)value);
            }
        }
        ,
        LegalEntity {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getLegalEntity();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setLegalEntity((String)value);
            }
        }
        ,
        BusinessUnit {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getBusinessUnit();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setBusinessUnit((String)value);
            }
        }
        ,
        BankName {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getBankName();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setBankName((String)value);
            }
        }
        ,
        BranchName {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getBranchName();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setBranchName((String)value);
            }
        }
        ,
        AccountName {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getAccountName();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setAccountName((String)value);
            }
        }
        ,
        CurrencyCode {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getCurrencyCode();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setCurrencyCode((String)value);
            }
        }
        ,
        BankAccountNumber {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getBankAccountNumber();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setBankAccountNumber((String)value);
            }
        }
        ,
        ProjectName {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getProjectName();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setProjectName((String)value);
            }
        }
        ,
        ProjectNumber {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getProjectNumber();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setProjectNumber((String)value);
            }
        }
        ,
        Area {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getArea();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setArea((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        FacilitySynBankEO {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getFacilitySynBankEO();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FacilityHdrEO {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getFacilityHdrEO();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setFacilityHdrEO((FacilityHdrEOImpl)value);
            }
        }
        ,
        FacilityFinancialEO {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getFacilityFinancialEO();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FacilityExtnEO {
            public Object get(FacilityTxnEOImpl obj) {
                return obj.getFacilityExtnEO();
            }

            public void put(FacilityTxnEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(FacilityTxnEOImpl object);

        public abstract void put(FacilityTxnEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TXNID = AttributesEnum.TxnId.index();
    public static final int DOCUMENTNUMBER = AttributesEnum.DocumentNumber.index();
    public static final int FACILITYNUMBER = AttributesEnum.FacilityNumber.index();
    public static final int TOTALAMOUNT = AttributesEnum.TotalAmount.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int FACILITYDATE = AttributesEnum.FacilityDate.index();
    public static final int EXPIRYDATE = AttributesEnum.ExpiryDate.index();
    public static final int EXTENDEDEXPIRYDATE = AttributesEnum.ExtendedExpiryDate.index();
    public static final int NUMBEROFEXTENDS = AttributesEnum.NumberOfExtends.index();
    public static final int LEGALENTITY = AttributesEnum.LegalEntity.index();
    public static final int BUSINESSUNIT = AttributesEnum.BusinessUnit.index();
    public static final int BANKNAME = AttributesEnum.BankName.index();
    public static final int BRANCHNAME = AttributesEnum.BranchName.index();
    public static final int ACCOUNTNAME = AttributesEnum.AccountName.index();
    public static final int CURRENCYCODE = AttributesEnum.CurrencyCode.index();
    public static final int BANKACCOUNTNUMBER = AttributesEnum.BankAccountNumber.index();
    public static final int PROJECTNAME = AttributesEnum.ProjectName.index();
    public static final int PROJECTNUMBER = AttributesEnum.ProjectNumber.index();
    public static final int AREA = AttributesEnum.Area.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int FACILITYSYNBANKEO = AttributesEnum.FacilitySynBankEO.index();
    public static final int FACILITYHDREO = AttributesEnum.FacilityHdrEO.index();
    public static final int FACILITYFINANCIALEO = AttributesEnum.FacilityFinancialEO.index();
    public static final int FACILITYEXTNEO = AttributesEnum.FacilityExtnEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FacilityTxnEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.in.fsa.EO.FacilityTxnEO");
    }

    /**
     * Gets the attribute value for TxnId, using the alias name TxnId.
     * @return the TxnId
     */
    public Number getTxnId() {
        return (Number)getAttributeInternal(TXNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TxnId.
     * @param value value to set the TxnId
     */
    public void setTxnId(Number value) {
        setAttributeInternal(TXNID, value);
    }

    /**
     * Gets the attribute value for DocumentNumber, using the alias name DocumentNumber.
     * @return the DocumentNumber
     */
    public Number getDocumentNumber() {
        return (Number)getAttributeInternal(DOCUMENTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocumentNumber.
     * @param value value to set the DocumentNumber
     */
    public void setDocumentNumber(Number value) {
        setAttributeInternal(DOCUMENTNUMBER, value);
    }

    /**
     * Gets the attribute value for FacilityNumber, using the alias name FacilityNumber.
     * @return the FacilityNumber
     */
    public String getFacilityNumber() {
        return (String)getAttributeInternal(FACILITYNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for FacilityNumber.
     * @param value value to set the FacilityNumber
     */
    public void setFacilityNumber(String value) {
        setAttributeInternal(FACILITYNUMBER, value);
    }

    /**
     * Gets the attribute value for TotalAmount, using the alias name TotalAmount.
     * @return the TotalAmount
     */
    public Number getTotalAmount() {
        return (Number)getAttributeInternal(TOTALAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalAmount.
     * @param value value to set the TotalAmount
     */
    public void setTotalAmount(Number value) {
        setAttributeInternal(TOTALAMOUNT, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for FacilityDate, using the alias name FacilityDate.
     * @return the FacilityDate
     */
    public Date getFacilityDate() {
        return (Date)getAttributeInternal(FACILITYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FacilityDate.
     * @param value value to set the FacilityDate
     */
    public void setFacilityDate(Date value) {
        setAttributeInternal(FACILITYDATE, value);
    }

    /**
     * Gets the attribute value for ExpiryDate, using the alias name ExpiryDate.
     * @return the ExpiryDate
     */
    public Date getExpiryDate() {
        return (Date)getAttributeInternal(EXPIRYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpiryDate.
     * @param value value to set the ExpiryDate
     */
    public void setExpiryDate(Date value) {
        setAttributeInternal(EXPIRYDATE, value);
    }

    /**
     * Gets the attribute value for ExtendedExpiryDate, using the alias name ExtendedExpiryDate.
     * @return the ExtendedExpiryDate
     */
    public Date getExtendedExpiryDate() {
        return (Date)getAttributeInternal(EXTENDEDEXPIRYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtendedExpiryDate.
     * @param value value to set the ExtendedExpiryDate
     */
    public void setExtendedExpiryDate(Date value) {
        setAttributeInternal(EXTENDEDEXPIRYDATE, value);
    }

    /**
     * Gets the attribute value for NumberOfExtends, using the alias name NumberOfExtends.
     * @return the NumberOfExtends
     */
    public Number getNumberOfExtends() {
        return (Number)getAttributeInternal(NUMBEROFEXTENDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumberOfExtends.
     * @param value value to set the NumberOfExtends
     */
    public void setNumberOfExtends(Number value) {
        setAttributeInternal(NUMBEROFEXTENDS, value);
    }

    /**
     * Gets the attribute value for LegalEntity, using the alias name LegalEntity.
     * @return the LegalEntity
     */
    public String getLegalEntity() {
        return (String)getAttributeInternal(LEGALENTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LegalEntity.
     * @param value value to set the LegalEntity
     */
    public void setLegalEntity(String value) {
        setAttributeInternal(LEGALENTITY, value);
    }

    /**
     * Gets the attribute value for BusinessUnit, using the alias name BusinessUnit.
     * @return the BusinessUnit
     */
    public String getBusinessUnit() {
        return (String)getAttributeInternal(BUSINESSUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for BusinessUnit.
     * @param value value to set the BusinessUnit
     */
    public void setBusinessUnit(String value) {
        setAttributeInternal(BUSINESSUNIT, value);
    }

    /**
     * Gets the attribute value for BankName, using the alias name BankName.
     * @return the BankName
     */
    public String getBankName() {
        return (String)getAttributeInternal(BANKNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for BankName.
     * @param value value to set the BankName
     */
    public void setBankName(String value) {
        setAttributeInternal(BANKNAME, value);
    }

    /**
     * Gets the attribute value for BranchName, using the alias name BranchName.
     * @return the BranchName
     */
    public String getBranchName() {
        return (String)getAttributeInternal(BRANCHNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for BranchName.
     * @param value value to set the BranchName
     */
    public void setBranchName(String value) {
        setAttributeInternal(BRANCHNAME, value);
    }

    /**
     * Gets the attribute value for AccountName, using the alias name AccountName.
     * @return the AccountName
     */
    public String getAccountName() {
        return (String)getAttributeInternal(ACCOUNTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccountName.
     * @param value value to set the AccountName
     */
    public void setAccountName(String value) {
        setAttributeInternal(ACCOUNTNAME, value);
    }

    /**
     * Gets the attribute value for CurrencyCode, using the alias name CurrencyCode.
     * @return the CurrencyCode
     */
    public String getCurrencyCode() {
        return (String)getAttributeInternal(CURRENCYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrencyCode.
     * @param value value to set the CurrencyCode
     */
    public void setCurrencyCode(String value) {
        setAttributeInternal(CURRENCYCODE, value);
    }

    /**
     * Gets the attribute value for BankAccountNumber, using the alias name BankAccountNumber.
     * @return the BankAccountNumber
     */
    public String getBankAccountNumber() {
        return (String)getAttributeInternal(BANKACCOUNTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for BankAccountNumber.
     * @param value value to set the BankAccountNumber
     */
    public void setBankAccountNumber(String value) {
        setAttributeInternal(BANKACCOUNTNUMBER, value);
    }

    /**
     * Gets the attribute value for ProjectName, using the alias name ProjectName.
     * @return the ProjectName
     */
    public String getProjectName() {
        return (String)getAttributeInternal(PROJECTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProjectName.
     * @param value value to set the ProjectName
     */
    public void setProjectName(String value) {
        setAttributeInternal(PROJECTNAME, value);
    }

    /**
     * Gets the attribute value for ProjectNumber, using the alias name ProjectNumber.
     * @return the ProjectNumber
     */
    public String getProjectNumber() {
        return (String)getAttributeInternal(PROJECTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProjectNumber.
     * @param value value to set the ProjectNumber
     */
    public void setProjectNumber(String value) {
        setAttributeInternal(PROJECTNUMBER, value);
    }

    /**
     * Gets the attribute value for Area, using the alias name Area.
     * @return the Area
     */
    public String getArea() {
        return (String)getAttributeInternal(AREA);
    }

    /**
     * Sets <code>value</code> as the attribute value for Area.
     * @param value value to set the Area
     */
    public void setArea(String value) {
        setAttributeInternal(AREA, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFacilitySynBankEO() {
        return (RowIterator)getAttributeInternal(FACILITYSYNBANKEO);
    }

    /**
     * @return the associated entity FacilityHdrEOImpl.
     */
    public FacilityHdrEOImpl getFacilityHdrEO() {
        return (FacilityHdrEOImpl)getAttributeInternal(FACILITYHDREO);
    }

    /**
     * Sets <code>value</code> as the associated entity FacilityHdrEOImpl.
     */
    public void setFacilityHdrEO(FacilityHdrEOImpl value) {
        setAttributeInternal(FACILITYHDREO, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFacilityFinancialEO() {
        return (RowIterator)getAttributeInternal(FACILITYFINANCIALEO);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFacilityExtnEO() {
        return (RowIterator)getAttributeInternal(FACILITYEXTNEO);
    }


    /**
     * @param txnId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number txnId) {
        return new Key(new Object[]{txnId});
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
